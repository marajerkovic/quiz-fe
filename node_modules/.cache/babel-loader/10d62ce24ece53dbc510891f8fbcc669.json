{"ast":null,"code":"var _jsxFileName = \"/home/mara/Development/quiz-app/final/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Route } from \"react-router\";\nlet routes = /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  path: \"/quiz\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Quiz, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(Route, {\n  path: \"/:newFact\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Fact, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(Route, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(NoMatch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }\n})));\n\nclass Quiz extends Component {\n  constructor() {\n    super();\n\n    this.getQuestion = () => {\n      fetch('http://localhost:8080/admin/questions', {\n        mode: 'cors'\n      }).then(response => response.json()).then(data => this.setState({\n        question: {\n          questionText: data.fact,\n          answerOptions: data.options.map(opt => {\n            return {\n              answerText: opt,\n              isCorrect: opt === data.answer\n            };\n          })\n        }\n      }));\n    };\n\n    this.nextQuestion = () => {\n      this.getQuestion();\n      this.setState({\n        selected: \"\"\n      });\n    };\n\n    this.state = {\n      question: {\n        answerOptions: []\n      },\n      selected: \"\"\n    };\n  }\n\n  // componentDidMount function to get question\n  componentDidMount() {\n    this.nextQuestion();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Qui\\xE9n es: \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }\n    }, this.state.question.questionText)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, this.state.question.answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.selected != \"\" && answerOption.isCorrect ? \"correct\" : this.state.selected == answerOption.answerText ? \"incorrect\" : \"\",\n      onClick: () => this.setState({\n        selected: answerOption.answerText\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, answerOption.answerText)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.nextQuestion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, \"Next\"));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Quiz, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/mara/Development/quiz-app/final/src/index.js"],"names":["React","Component","ReactDOM","Route","routes","Quiz","constructor","getQuestion","fetch","mode","then","response","json","data","setState","question","questionText","fact","answerOptions","options","map","opt","answerText","isCorrect","answer","nextQuestion","selected","state","componentDidMount","render","answerOption","document","getElementById"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { Route } from \"react-router\";\n\nlet routes = (\n  <div>\n    <Route path=\"/quiz\">\n      <Quiz />\n    </Route>\n    <Route path=\"/:newFact\">\n      <Fact />\n    </Route>\n    <Route>\n      <NoMatch />\n    </Route>\n  </div>\n);\n\nclass Quiz extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t  question: {answerOptions: []},\n\t\t  selected: \"\"\n\t\t};\n\t  }\n\n\tgetQuestion = () => {\n\t\tfetch('http://localhost:8080/admin/questions', {mode: 'cors'})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => this.setState({question: \n\t\t\t\t{questionText: data.fact, \n\t\t\t\tanswerOptions: data.options.map((opt) => { return {answerText: opt, isCorrect: (opt === data.answer) } ; })}\n\t\t\t}))\n\t};\n\n\t// componentDidMount function to get question\n\tcomponentDidMount() {\n\t\tthis.nextQuestion();\n\t}\n\n\tnextQuestion = () => {\n\t\tthis.getQuestion();\n\t\tthis.setState({selected: \"\"});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div >\n\t\t\t\t<div className='app'>\n\t\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t\t<span>Qui√©n es: </span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='question-text'>{this.state.question.questionText}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t\t{this.state.question.answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t\t<button className={this.state.selected != \"\" && answerOption.isCorrect ? \"correct\" : this.state.selected == answerOption.answerText ? \"incorrect\" : \"\"}\n\t\t\t\t\t\t\t\tonClick={() => this.setState({selected: answerOption.answerText})}>{answerOption.answerText}</button>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<br></br>\n\t\t\t\t<button onClick={() => this.nextQuestion()}>Next</button>\n\t\t\t</div>\n\n\n\t\t)\n\t};\n}\n\nReactDOM.render(<Quiz/>, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}