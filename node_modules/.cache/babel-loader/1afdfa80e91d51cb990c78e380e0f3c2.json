{"ast":null,"code":"var _jsxFileName = \"/home/mara/Development/quiz-app/final/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass Quiz extends Component {\n  constructor() {\n    super();\n\n    this.getQuestions = () => {\n      fetch('http://localhost:8080/admin/questions', {\n        mode: 'cors'\n      }).then(response => response.json()).then(data => this.setState({\n        question: {\n          questionText: data.fact,\n          answerOptions: data.options.map(opt => {\n            return {\n              answerText: opt,\n              isCorrect: opt == data.answer\n            };\n          })\n        }\n      }));\n    };\n\n    this.handleAnswerOptionClick = isCorrect => {\n      alert(\"ok\");\n      /*if (isCorrect) {\n      \tsetScore(score + 1);\n      }\n      \tconst nextQuestion = currentQuestion + 1;\n      if (nextQuestion < questions.length) {\n      \tsetCurrentQuestion(nextQuestion);\n      } else {\n      \tsetShowScore(true);\n      }*/\n    };\n\n    this.state = {\n      question: {}\n    };\n  }\n\n  // componentDidMount function to get question\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }\n    }, \"(\", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Question \", currentQuestion + 1), \"/\", this.state.questions.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 8\n      }\n    }, this.state.questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, this.state.questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleAnswerOptionClick(answerOption.isCorrect),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, answerOption.answerText)))), \")}\");\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Quiz, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/mara/Development/quiz-app/final/src/index.js"],"names":["React","Component","ReactDOM","Quiz","constructor","getQuestions","fetch","mode","then","response","json","data","setState","question","questionText","fact","answerOptions","options","map","opt","answerText","isCorrect","answer","handleAnswerOptionClick","alert","state","componentDidMount","render","currentQuestion","questions","length","answerOption","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAE5BG,EAAAA,WAAW,GAAG;AACb;;AADa,SAOdC,YAPc,GAOC,MAAM;AACpBC,MAAAA,KAAK,CAAC,uCAAD,EAA0C;AAACC,QAAAA,IAAI,EAAE;AAAP,OAA1C,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EACpC;AAACC,UAAAA,YAAY,EAAEH,IAAI,CAACI,IAApB;AACAC,UAAAA,aAAa,EAAEL,IAAI,CAACM,OAAL,CAAaC,GAAb,CAAkBC,GAAD,IAAS;AAAE,mBAAO;AAACC,cAAAA,UAAU,EAAED,GAAb;AAAkBE,cAAAA,SAAS,EAAGF,GAAG,IAAIR,IAAI,CAACW;AAA1C,aAAP;AAA8D,WAA1F;AADf;AAD2B,OAAd,CAFf;AAMA,KAda;;AAAA,SAqBdC,uBArBc,GAqBaF,SAAD,IAAe;AACxCG,MAAAA,KAAK,CAAC,IAAD,CAAL;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,KAjCa;;AAEb,SAAKC,KAAL,GAAa;AACXZ,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGE;;AAWH;AACAa,EAAAA,iBAAiB,GAAG;AACnB,SAAKrB,YAAL;AACA;;AAgBDsB,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE,uDACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBC,eAAe,GAAG,CAAlC,CADD,OAC8C,KAAKH,KAAL,CAAWI,SAAX,CAAqBC,MADnE,CADD,eAIC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKL,KAAL,CAAWI,SAAX,CAAqBD,eAArB,EAAsCd,YAAtE,CAJD,CADD,eAOC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKW,KAAL,CAAWI,SAAX,CAAqBD,eAArB,EAAsCZ,aAAtC,CAAoDE,GAApD,CAAyDa,YAAD,iBACxD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKR,uBAAL,CAA6BQ,YAAY,CAACV,SAA1C,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8EU,YAAY,CAACX,UAA3F,CADA,CADF,CAPD,CAFF,OADD;AAmBA;;AAzD2B;;AA4D7BlB,QAAQ,CAACyB,MAAT,eAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass Quiz extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t  question: {}\n\t\t};\n\t  }\n\n\tgetQuestions = () => {\n\t\tfetch('http://localhost:8080/admin/questions', {mode: 'cors'})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => this.setState({question: \n\t\t\t\t{questionText: data.fact, \n\t\t\t\tanswerOptions: data.options.map((opt) => { return {answerText: opt, isCorrect: (opt == data.answer) } ; })}\n\t\t\t}))\n\t};\n\n\t// componentDidMount function to get question\n\tcomponentDidMount() {\n\t\tthis.getQuestions();\n\t}\n\n\thandleAnswerOptionClick = (isCorrect) => {\n\t\talert(\"ok\");\n\t\t/*if (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}*/\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='app'>\n\t\t\t\t(\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{this.state.questions.length}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='question-text'>{this.state.questions[currentQuestion].questionText}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t\t{this.state.questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t\t<button onClick={() => this.handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t};\n}\n\nReactDOM.render(<Quiz/>, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}