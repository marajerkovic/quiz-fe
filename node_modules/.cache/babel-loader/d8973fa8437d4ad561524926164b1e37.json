{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mara\\\\repos\\\\quiz-fe\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass Quiz extends Component {\n  constructor() {\n    super();\n\n    this.getQuestion = () => {\n      fetch('https://quiz-be-n5il.onrender.com/admin/questions', {\n        mode: 'cors'\n      }).then(response => response.json()).then(data => this.setState({\n        question: {\n          questionText: data.fact,\n          answerOptions: data.options.map(opt => {\n            return {\n              answerText: opt,\n              isCorrect: opt === data.answer\n            };\n          })\n        }\n      }));\n    };\n\n    this.nextQuestion = () => {\n      this.getQuestion();\n      this.setState({\n        selected: \"\"\n      });\n    };\n\n    this.state = {\n      question: {\n        answerOptions: []\n      },\n      selected: \"\"\n    };\n  }\n\n  // componentDidMount function to get question\n  componentDidMount() {\n    this.nextQuestion();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Qui\\xE9n es: \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 8\n      }\n    }, this.state.question.questionText)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, this.state.question.answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.selected !== \"\" && answerOption.isCorrect ? \"correct\" : this.state.selected === answerOption.answerText ? \"incorrect\" : \"\",\n      onClick: () => this.setState({\n        selected: answerOption.answerText\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, answerOption.answerText)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.nextQuestion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, \"Next\"));\n  }\n\n}\n\nclass Fact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fact: '',\n      name: '',\n      disabled: false\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleFactChange = this.handleFactChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFactChange(event) {\n    this.setState({\n      fact: event.target.value\n    });\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        fact: this.state.fact,\n        owner: this.state.name\n      })\n    };\n    fetch('https://quiz-be-n5il.onrender.com/facts', requestOptions).then(response => response.json()).then(data => alert(\"Ok!\"));\n    this.setState({\n      fact: '',\n      disabled: true\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }, \"Tu nombre: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"fact-form\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleNameChange,\n      disabled: this.state.disabled ? \"disabled\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 4\n      }\n    }), \" />\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, \"Contanos algo sobre vos! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"fact-form\",\n      rows: \"4\",\n      cols: \"50\",\n      value: this.state.fact,\n      onChange: this.handleFactChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 4\n      }\n    })), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, \"Send\")));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  path: \"/quiz\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Quiz, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }\n})), /*#__PURE__*/React.createElement(Route, {\n  path: \"/newFact\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Fact, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }\n})))), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Mara/repos/quiz-fe/src/index.js"],"names":["React","Component","ReactDOM","BrowserRouter","Router","Route","Quiz","constructor","getQuestion","fetch","mode","then","response","json","data","setState","question","questionText","fact","answerOptions","options","map","opt","answerText","isCorrect","answer","nextQuestion","selected","state","componentDidMount","render","answerOption","Fact","props","name","disabled","handleNameChange","bind","handleFactChange","handleSubmit","event","target","value","requestOptions","method","headers","body","JSON","stringify","owner","alert","preventDefault","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAE5BM,EAAAA,WAAW,GAAG;AACb;;AADa,SAQdC,WARc,GAQA,MAAM;AACnBC,MAAAA,KAAK,CAAC,mDAAD,EAAsD;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAtD,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EACpC;AAACC,UAAAA,YAAY,EAAEH,IAAI,CAACI,IAApB;AACAC,UAAAA,aAAa,EAAEL,IAAI,CAACM,OAAL,CAAaC,GAAb,CAAkBC,GAAD,IAAS;AAAE,mBAAO;AAACC,cAAAA,UAAU,EAAED,GAAb;AAAkBE,cAAAA,SAAS,EAAGF,GAAG,KAAKR,IAAI,CAACW;AAA3C,aAAP;AAA+D,WAA3F;AADf;AAD2B,OAAd,CAFf;AAMA,KAfa;;AAAA,SAsBdC,YAtBc,GAsBC,MAAM;AACpB,WAAKlB,WAAL;AACA,WAAKO,QAAL,CAAc;AAACY,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACA,KAzBa;;AAEb,SAAKC,KAAL,GAAa;AACXZ,MAAAA,QAAQ,EAAE;AAACG,QAAAA,aAAa,EAAE;AAAhB,OADC;AAEXQ,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAIE;;AAWH;AACAE,EAAAA,iBAAiB,GAAG;AACnB,SAAKH,YAAL;AACA;;AAODI,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,CADD,eAIC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKF,KAAL,CAAWZ,QAAX,CAAoBC,YAApD,CAJD,CADF,eAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKW,KAAL,CAAWZ,QAAX,CAAoBG,aAApB,CAAkCE,GAAlC,CAAuCU,YAAD,iBACtC;AAAQ,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWD,QAAX,KAAwB,EAAxB,IAA8BI,YAAY,CAACP,SAA3C,GAAuD,SAAvD,GAAmE,KAAKI,KAAL,CAAWD,QAAX,KAAwBI,YAAY,CAACR,UAArC,GAAkD,WAAlD,GAAgE,EAAtJ;AACA,MAAA,OAAO,EAAE,MAAM,KAAKR,QAAL,CAAc;AAACY,QAAAA,QAAQ,EAAEI,YAAY,CAACR;AAAxB,OAAd,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACoEQ,YAAY,CAACR,UADjF,CADA,CADF,CAPF,CADD,eAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfD,eAgBC;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKG,YAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBD,CADD;AAsBA;;AApD2B;;AAuD7B,MAAMM,IAAN,SAAmBhC,KAAK,CAACC,SAAzB,CAAmC;AAClCM,EAAAA,WAAW,CAAC0B,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKL,KAAL,GAAa;AAACV,MAAAA,IAAI,EAAE,EAAP;AAAWgB,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAAb;AAEA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,gBAAgB,CAACE,KAAD,EAAQ;AACtB,SAAKzB,QAAL,CAAc;AAACG,MAAAA,IAAI,EAAEsB,KAAK,CAACC,MAAN,CAAaC;AAApB,KAAd;AACD;;AACDN,EAAAA,gBAAgB,CAACI,KAAD,EAAQ;AACvB,SAAKzB,QAAL,CAAc;AAACmB,MAAAA,IAAI,EAAEM,KAAK,CAACC,MAAN,CAAaC;AAApB,KAAd;AACA;;AAEDH,EAAAA,YAAY,CAACC,KAAD,EAAQ;AACnB,UAAMG,cAAc,GAAG;AACtBC,MAAAA,MAAM,EAAE,MADc;AAEtBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFa;AAGtBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC9B,QAAAA,IAAI,EAAE,KAAKU,KAAL,CAAWV,IAAlB;AAAwB+B,QAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWM;AAA1C,OAAf;AAHgB,KAAvB;AAKAzB,IAAAA,KAAK,CAAC,yCAAD,EAA4CkC,cAA5C,CAAL,CACEhC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOG,IAAI,IAAIoC,KAAK,CAAC,KAAD,CAFpB;AAGA,SAAKnC,QAAL,CAAc;AAACG,MAAAA,IAAI,EAAE,EAAP;AAAWiB,MAAAA,QAAQ,EAAE;AAArB,KAAd;AACAK,IAAAA,KAAK,CAACW,cAAN;AACA;;AAEDrB,EAAAA,MAAM,GAAG;AACP,wBACD;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,QAAQ,EAAE,KAAKS,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV,eAED;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWM,IAA3D;AAAiE,MAAA,QAAQ,EAAE,KAAKE,gBAAhF;AAAkG,MAAA,QAAQ,EAAG,KAAKR,KAAL,CAAWO,QAAZ,GAAuB,UAAvB,GAAoC,EAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC,QADF,eAKE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADxB,eAED;AAAU,MAAA,SAAS,EAAC,WAApB;AAAgC,MAAA,IAAI,EAAC,GAArC;AAAyC,MAAA,IAAI,EAAC,IAA9C;AAAmD,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWV,IAArE;AAA2E,MAAA,QAAQ,EAAE,KAAKoB,gBAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC,CALF,oBAQS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MART,eASE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADA,CADC;AAeD;;AA9CiC;;AAiDnCpC,QAAQ,CAAC4B,MAAT,eACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACD,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADC,eAID,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAJC,CADF,CADD,EAWCsB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXD","sourcesContent":["import React, {Component} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nclass Quiz extends Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t  question: {answerOptions: []},\r\n\t\t  selected: \"\"\r\n\t\t};\r\n\t  }\r\n\r\n\tgetQuestion = () => {\r\n\t\tfetch('https://quiz-be-n5il.onrender.com/admin/questions', {mode: 'cors'})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => this.setState({question: \r\n\t\t\t\t{questionText: data.fact, \r\n\t\t\t\tanswerOptions: data.options.map((opt) => { return {answerText: opt, isCorrect: (opt === data.answer) } ; })}\r\n\t\t\t}))\r\n\t};\r\n\r\n\t// componentDidMount function to get question\r\n\tcomponentDidMount() {\r\n\t\tthis.nextQuestion();\r\n\t}\r\n\r\n\tnextQuestion = () => {\r\n\t\tthis.getQuestion();\r\n\t\tthis.setState({selected: \"\"});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div >\r\n\t\t\t\t<div className='app'>\r\n\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t<span>Quién es: </span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='question-text'>{this.state.question.questionText}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t{this.state.question.answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t\t<button className={this.state.selected !== \"\" && answerOption.isCorrect ? \"correct\" : this.state.selected === answerOption.answerText ? \"incorrect\" : \"\"}\r\n\t\t\t\t\t\t\t\tonClick={() => this.setState({selected: answerOption.answerText})}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<button onClick={() => this.nextQuestion()}>Next</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t)\r\n\t};\r\n}\r\n\r\nclass Fact extends React.Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.state = {fact: '', name: '', disabled: false};\r\n  \r\n\t  this.handleNameChange = this.handleNameChange.bind(this);\r\n\t  this.handleFactChange = this.handleFactChange.bind(this);\r\n\t  this.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n  \r\n\thandleFactChange(event) {\r\n\t  this.setState({fact: event.target.value});\r\n\t}\r\n\thandleNameChange(event) {\r\n\t\tthis.setState({name: event.target.value});\r\n\t}\r\n  \r\n\thandleSubmit(event) {\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({fact: this.state.fact, owner: this.state.name})\r\n\t\t};\r\n\t\tfetch('https://quiz-be-n5il.onrender.com/facts', requestOptions)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => alert(\"Ok!\"));\r\n\t\tthis.setState({fact: '', disabled: true})\r\n\t\tevent.preventDefault();\r\n\t}\r\n  \r\n\trender() {\r\n\t  return (\r\n\t\t<div className='app'>\r\n\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t  <div className=\"question-text\">\r\n\t\t\tTu nombre: <br></br>\r\n\t\t\t<input className=\"fact-form\" type=\"text\" value={this.state.name} onChange={this.handleNameChange} disabled={(this.state.disabled)? \"disabled\" : \"\"}/> />\r\n\t\t  </div>\r\n\t\t  <div className=\"question-text\">\r\n\t\t\tContanos algo sobre vos! <br></br>\r\n\t\t\t<textarea className=\"fact-form\" rows=\"4\" cols=\"50\" value={this.state.fact} onChange={this.handleFactChange} />\r\n\t\t  </div> <br></br>\r\n\t\t  <button type=\"submit\">Send</button>\r\n\t\t</form>\r\n\t\t</div>\r\n\t  );\r\n\t}\r\n  }\r\n\r\nReactDOM.render(\r\n\t<Router>\r\n\t  <div>\r\n\t\t<Route path=\"/quiz\">\r\n\t\t  <Quiz />\r\n\t\t</Route>\r\n\t\t<Route path=\"/newFact\">\r\n\t\t  <Fact />\r\n\t\t</Route>\r\n\t  </div>\r\n\t</Router>,\r\n\tdocument.getElementById(\"root\")\r\n  );\r\n"]},"metadata":{},"sourceType":"module"}